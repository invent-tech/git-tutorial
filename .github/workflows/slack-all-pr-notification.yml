name: Fetch Open PRs with Specific Label and Send to Slack

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:
    - cron: '0 9 * * *'  # Runs every day at 9 AM UTC

jobs:
  fetch_open_prs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Open Pull Requests with Label
        id: get_open_prs
        run: |
          LABEL="test"  # Change this to your specific label
          OPEN_PRS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&per_page=100")

          # Filter PRs that have the specific label
           FILTERED_PRS=$(echo "$OPEN_PRS" | jq --arg LABEL "$LABEL" '[.[] | select(.labels[]? | .name == $LABEL)]')

          # Save filtered PRs to a JSON file
          echo "$FILTERED_PRS" > filtered_prs.json
          # Count the number of filtered PRs
          PR_COUNT=$(echo "$FILTERED_PRS" | jq '. | length')
          echo "Total Open PRs with label '$LABEL': $PR_COUNT"

          # Prepare message for Slack
          if [[ $PR_COUNT -gt 0 ]]; then
            MESSAGE="*Total Open PRs with label '$LABEL': $PR_COUNT*\n"

            # Initialize an empty variable to store formatted details
            PR_DETAILS=""
            while read -r pr; do
              TITLE=$(echo "$pr" | jq -r '.title')
              URL=$(echo "$pr" | jq -r '.html_url')
              AUTHOR=$(echo "$pr" | jq -r '.user.login')
              CREATED_AT=$(echo "$pr" | jq -r '.created_at')
              PR_DETAILS+="*Title:* $TITLE\n*URL:* $URL\n*Author:* $AUTHOR\n*Created At:* $CREATED_AT\n\n"
            done < <(echo "$FILTERED_PRS" | jq -c '.[]')

            echo "Final details : $PR_DETAILS"
            MESSAGE+="$PR_DETAILS"
            echo "::set-output name=slack_message::$MESSAGE"
          else
            echo "::set-output name=slack_message::No open PRs with the specified label."
          fi

      - name: Send Notification to Slack
        if: steps.get_open_prs.outputs.slack_message != ''
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "${{ steps.get_open_prs.outputs.slack_message }}"
          }' ${{ secrets.SLACK_WEEBHOOK }}
